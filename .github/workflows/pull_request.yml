name: In pull request
on:
  pull_request:

###############################################################################
# 1. Ruff lint + format
###############################################################################
jobs:
  lint:
    name: Ruff Lint & Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # One install – two commands
      - name: Install Ruff
        run: pip install ruff==0.8.6

      - name: Run Ruff
        run: |
          ruff check ./src ./tests
          ruff format --check ./src ./tests

###############################################################################
# 2. CPU-only compatibility matrix
###############################################################################
  test_compatibility_cpu:
    name: Test Package Compatibility (CPU matrix)
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.9"
            dependency-set: minimum
          - os: macos-13        # macOS runner that still supports 3.9
            python-version: "3.9"
            dependency-set: minimum
          - os: windows-latest
            python-version: "3.9"
            dependency-set: minimum
          - os: macos-latest
            python-version: "3.13"
            dependency-set: maximum
          - os: windows-latest
            python-version: "3.13"
            dependency-set: maximum
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip            # wheel cache across jobs/runs

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Generate requirements file
        run: python scripts/generate_dependencies.py ${{ matrix.dependency-set }}

      - name: Install dependencies
        shell: bash
        run: |
          # CPU-only wheel – smaller & faster
          uv pip install --system torch --index-url https://download.pytorch.org/whl/cpu
          uv pip install --system --no-deps .
          uv pip install --system -r requirements.txt
          uv pip install --system pytest psutil
          # ONNX still missing for 3.13
          if [[ "${{ matrix.python-version }}" != "3.13" ]]; then
            uv pip install --system onnx
          fi

      - name: Init submodules
        run: git submodule update --init --recursive

      - name: Run tests
        run: pytest tests/

###############################################################################
# 3. Linux-latest (Py 3.13, CPU) – explicit gate for the GPU job
###############################################################################
  test_compatibility_linux_latest:
    name: Test Package Compatibility (Linux Py 3.13  CPU)
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Generate requirements file
        run: python scripts/generate_dependencies.py maximum

      - name: Install dependencies
        shell: bash
        run: |
          uv pip install --system torch --index-url https://download.pytorch.org/whl/cpu
          uv pip install --system --no-deps .
          uv pip install --system -r requirements.txt
          uv pip install --system pytest psutil

      - name: Init submodules
        run: git submodule update --init --recursive

      - name: Run tests
        run: pytest tests/

###############################################################################
# 4. Single GPU smoke-test (runs only after *all* CPU jobs + lint pass)
###############################################################################

  test_gpu_cuda:
    name: GPU CUDA Tests (Linux Py 3.13)
    needs:
      - lint
    runs-on: ubuntu-22.04-4core-gpu

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: pip

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true

      - name: Generate requirements file
        run: python scripts/generate_dependencies.py maximum

      - name: Install project & CUDA deps
        shell: bash
        run: |
          uv pip install --system --no-deps .
          uv pip install --system -r requirements.txt
          uv pip install --system pytest psutil

      - name: Init submodules
        run: git submodule update --init --recursive

      - name: Run GPU test suite
        run: pytest tests/ -v
