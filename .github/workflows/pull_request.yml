name: In pull request
on:
  pull_request:

#######################################################################
#  Linting & formatting (unchanged)
#######################################################################
jobs:
  check_python_linting:
    name: Ruff Linting & Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: astral-sh/ruff-action@eaf0ecdd668ceea36159ff9d91882c9795d89b49 # v3.4.0
        with:
          src: "./src ./tests"
          version: 0.8.6
      - uses: astral-sh/ruff-action@eaf0ecdd668ceea36159ff9d91882c9795d89b49 # v3.4.0
        with:
          src: "./src ./tests"
          version: 0.8.6
          args: "format --check"

#######################################################################
#  CPU-only compatibility matrix
#  (all OSes except the Linux+3.13 combo we gate the GPU test on)
#######################################################################
  test_compatibility_cpu:
    name: Test Package Compatibility (CPU matrix)
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: "3.9"
            dependency-set: minimum
          - os: macos-13          # macos-latest fails with Py 3.10
            python-version: "3.9"
            dependency-set: minimum
          - os: windows-latest
            python-version: "3.9"
            dependency-set: minimum
          - os: macos-latest
            python-version: "3.13"
            dependency-set: maximum
          - os: windows-latest
            python-version: "3.13"
            dependency-set: maximum
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6.3.0
        with:
          enable-cache: true

      - name: Generate requirements file
        run: python scripts/generate_dependencies.py ${{ matrix.dependency-set }}

      - name: Install dependencies
        shell: bash
        run: |
          uv pip install --system --no-deps .
          uv pip install --system -r requirements.txt
          uv pip install --system pytest psutil
          # onnx not yet available for Python 3.13
          if [[ "${{ matrix.python-version }}" != "3.13" ]]; then
            uv pip install --system onnx
          fi

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Run Tests
        run: pytest tests/

#######################################################################
#  Linux-latest (Py 3.13, CPU) – gate for the GPU job
#######################################################################
  test_compatibility_linux_latest:
    name: Test Package Compatibility (Linux Py 3.13)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python 3.13
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"
          architecture: x64

      - name: Install uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6.3.0
        with:
          enable-cache: true

      - name: Generate requirements file
        run: python scripts/generate_dependencies.py maximum

      - name: Install dependencies
        shell: bash
        run: |
          uv pip install --system --no-deps .
          uv pip install --system -r requirements.txt
          uv pip install --system pytest psutil
          # onnx not yet available for Python 3.13

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Run Tests
        run: pytest tests/

#######################################################################
#  GPU smoke-test – runs only after the Linux 3.13 CPU job succeeds
#######################################################################
  test_gpu_cuda:
    name: GPU CUDA Tests (Linux Py 3.13)
    needs: test_compatibility_linux_latest
    # Use the label you gave your GitHub-hosted GPU runner
    runs-on: ubuntu-22.04-4core-gpu

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python 3.13
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.13"

      - name: Install uv
        uses: astral-sh/setup-uv@445689ea25e0de0a23313031f5fe577c74ae45a1 # v6.3.0
        with:
          enable-cache: true

      - name: Generate requirements file
        run: python scripts/generate_dependencies.py maximum

      - name: Install project & CUDA deps
        shell: bash
        run: |
          # CUDA 12.1 wheels match the GitHub GPU image
          uv pip install --system --no-deps .
          uv pip install --system -r requirements.txt
          uv pip install --system pytest psutil
          # onnx not yet available for Python 3.13

      - name: Initialize submodules
        run: git submodule update --init --recursive

      - name: Run GPU Test Suite
        env:
          CUDA_VISIBLE_DEVICES: 0
        run: pytest tests/ -v
